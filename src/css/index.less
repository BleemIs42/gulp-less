// 1.变量
// 2.混合样式
// 3.嵌套
@bgColor: red;
@light-green: #4FF42A;
@light-blue: #4facf5;
.bordered{
	border-top:dotted 2px black;
	border-bottom: solid 2px black;
}
.box{
	width:200px;
	height:200px;
	background-color: @bgColor;
	transform: translate(50px, 0);
	.bordered;
	.cube{
		width:50px;
		height:50px;
 		background-color: @light-green;
 		transform: translate(50%, 50%);
	}
}
.react{
	float:left;
	width:100px;
	height:100px;
	background-color: @light-blue;
}
.clearfloat{
	display: block;
  	zoom: 1;
	&:after {
	    content: " ";
	    display: block;
	    font-size: 0;
	    height: 0;
	    clear: both;
	    visibility: hidden;
	}
}

// 4.运算
@base: 5%;
@filler: @base * 2;
@other: @base + @filler;
.desc{
	width:200px;
	color: #888 / 4;
	background-color: @light-green + #111;
	height: 30px / 2 + @filler;
}

// 5.函数
.mixin(@color: black; @margin: 10px; @padding: 20px) {
    margin: @margin;
    padding: @padding;
    background-color: @color;
}
.box-shadow(@x: 0; @y: 0; @blur: 1px; @color: #000) {
    box-shadow: @arguments;
}
.class1 {
	width:10px;
	height:50px;
    .mixin(@margin: 20px; @color: #33acfe);
    .box-shadow(2px, 5px);
}
.average(@x, @y) {
  @average: ((@x + @y) / 2);
}
.class2 {
	width:300px;
	height:80px;
    .mixin(#efca44; @padding: 40px);
    .box-shadow(3px, 3px);
    .average(16px, 8px);             // "call" the mixin
  	border: @average solid red;      // use its "return" value
}

// 6.混合中的if/else
.mixin2 (@a) when (lightness(@a) >= 50%) {
  background-color: black;
}
.mixin2 (@a) when (lightness(@a) < 50%) {
  background-color: white;
}
.mixin2 (@a) {
  color: @a;
}
.class3 { 
	.mixin2(#ddd);
}
.class4 { 
	.mixin2(#ccc);
}

// 7.循环
.generate-columns(4);

.generate-columns(@n, @i: 1) when (@i =< @n) {
  .column-@{i} {
    width: (@i * 100% / @n);
  }
  .generate-columns(@n, (@i + 1));
}

// 8.合并
.mixin() {
  box-shadow+: inset 0 0 10px #555;
}
.myclass {
  .mixin();
  box-shadow+: 0 0 20px black;
}

// 9.父选择器
.button {
  &-ok {
    background-image: url("ok.png");
  }
  &-cancel {
    background-image: url("cancel.png");
  }
  &-custom {
    background-image: url("custom.png");
  }
}
.grand {
  .parent {
    & > & {
      color: red;
    }
    & & {
      color: green;
    }
    && {
      color: blue;
    }
    &, &ish {
      color: cyan;
    }
  }
}
.content{
  width:20px;
  height:20px;
}







